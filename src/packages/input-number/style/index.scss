@mixin size-of-input-number($name: $default-size-name) {
  $setting: map_get($size-map, $name);
  font-size: map_get($setting, 'fontSize');
  //@include set-liner-height(map_get($setting, $height), 1px);
  //@include set-padding-h(map_get($setting, 'inputPadding'));
}

@mixin sizes-of-input-expand() {
  @include size-of-input-number();
  @each $name in map_keys($size-map) {
    @if ($name != $default-size-name) {
      &.#{$ns-input}-#{$name} {
        @include size-of-input-number($name);
      }
    }
  }
}

.#{$ns-input-number} {
  position: relative;
  display: inline-block;
  width: $default-input-width;

  @include sizes-of-input-item();

  & > .#{$ns-input}-clearable {
    & > .#{$ns-input} {
      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
      }

      &[type="number"] {
        -moz-appearance: textfield;
      }
    }

    & > .#{$ns-input}-clear-icon {
      right: 4em;
    }
  }
}

$border-color: #aaa;

.#{$ns-input-number}-button {
  position: absolute;
  right: 0;
  width: 2.2em;
  z-index: 1;
  border-left: 1px solid $border-color;
  cursor: pointer;

  &::after {
    content: '';
    position: absolute;
    display: block;
    font-size: 0;
    border: 5px solid transparent;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    transition-duration: $transition-duration-fast;
  }

  &.#{$ns-input-number}-plus {
    top: 0;
    bottom: 50%;
    border-bottom: 1px solid $border-color;

    &::after {
      border-bottom-color: $border-color;
    }

    &:hover::after {
      border-bottom-color: darken($border-color, 40);
    }
  }

  &.#{$ns-input-number}-minus {
    top: 50%;
    bottom: 0;

    &::after {
      border-top-color: $border-color;
    }

    &:hover::after {
      border-top-color: darken($border-color, 40);
    }
  }
}
